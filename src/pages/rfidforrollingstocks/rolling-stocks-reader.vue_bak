<script setup>
import AddNewReaderDrawer from '@/views/apps/rfidforrolloingstocks/list/AddNewReaderDrawer.vue'
import { useUserListStore } from '@/views/apps/user/useUserListStore'
import { avatarText } from '@core/utils/formatters'

const userListStore = useUserListStore()
const searchQuery = ref('')
const selectedRole = ref()
const selectedPlan = ref()
const selectedStatus = ref()
const rowPerPage = ref(10)
const currentPage = ref(1)
const totalPage = ref(1)
const totalUsers = ref(0)
const users = ref([])

// ?? Fetching users
const fetchUsers = () => {
  userListStore.fetchUsers({
    q: searchQuery.value,
    status: selectedStatus.value,
    plan: selectedPlan.value,
    role: selectedRole.value,
    perPage: rowPerPage.value,
    currentPage: currentPage.value,
  }).then(response => {
    users.value = response.data.users
    totalPage.value = response.data.totalPage
    totalUsers.value = response.data.totalUsers
  }).catch(error => {
    console.error(error)
  })
}

watchEffect(fetchUsers)

// ?? watching current page
watchEffect(() => {
  if (currentPage.value > totalPage.value)
    currentPage.value = totalPage.value
})

// ?? search filters
const roles = [
  {
    title: 'Admin',
    value: 'admin',
  },
  {
    title: 'Author',
    value: 'author',
  },
  {
    title: 'Editor',
    value: 'editor',
  },
  {
    title: 'Maintainer',
    value: 'maintainer',
  },
  {
    title: 'Subscriber',
    value: 'subscriber',
  },
]

const plans = [
  {
    title: 'Basic',
    value: 'basic',
  },
  {
    title: 'Company',
    value: 'company',
  },
  {
    title: 'Enterprise',
    value: 'enterprise',
  },
  {
    title: 'Team',
    value: 'team',
  },
]

const status = [
  {
    title: 'Pending',
    value: 'pending',
  },
  {
    title: 'Active',
    value: 'active',
  },
  {
    title: 'Inactive',
    value: 'inactive',
  },
]

const resolveUserRoleVariant = role => {
  if (role === 'subscriber')
    return {
      color: 'warning',
      icon: 'tabler-user',
    }
  if (role === 'author')
    return {
      color: 'success',
      icon: 'tabler-circle-check',
    }
  if (role === 'maintainer')
    return {
      color: 'primary',
      icon: 'tabler-chart-pie-2',
    }
  if (role === 'editor')
    return {
      color: 'info',
      icon: 'tabler-pencil',
    }
  if (role === 'admin')
    return {
      color: 'secondary',
      icon: 'tabler-device-laptop',
    }
  
  return {
    color: 'primary',
    icon: 'tabler-user',
  }
}

const resolveUserStatusVariant = stat => {
  if (stat === 'pending')
    return 'warning'
  if (stat === 'active')
    return 'success'
  if (stat === 'inactive')
    return 'secondary'
  
  return 'primary'
}

const employee = [

  {
      
      "employee_id": "0001",
      "employee_name":"Kishore",
      "department":"IT",
      "shift":"GEN",
      "cardnumber":"001",
      "staff_category":"Employee",
      "location": "",
      "imgurl": "https://cdn-icons-png.flaticon.com/512/3135/3135715.png",
      "active": "Yes",
      
      },
      {
        "employee_id":  "0002",
      "employee_name":"Sateesh",
      "department":"Accounts",
      "shift":"Day",
      "cardnumber":"002",
      "staff_category":"Management",
      "location": "",
      "imgurl": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTGUkxFiLVGXnIL-vmVrPRRwTkUeg_BI2nvdohN-KJNN6G3musMRA-c6iQQmdbngFHV5_4&usqp=CAU",
      "active": "Yes",
        },
        {
          "employee_id":  "0003",
      "employee_name":"Madhu",
      "department":"Engineer",
      "shift":"Night",
      "cardnumber":"003",
      "staff_category":"Employee",
      "location": "",
      "imgurl": "https://www.clipartmax.com/png/middle/171-1717870_stockvader-predicted-cron-for-may-user-profile-icon-png.png",
      "active": "No",
          },
          {
            "employee_id":  "0004",
      "employee_name":"Kishore",
      "department":"IT",
      "shift":"GEN",
      "cardnumber":"004",
      "staff_category":"Employee",
      "location": "",
      "imgurl": "https://cdn-icons-png.flaticon.com/512/3135/3135715.png",
      "active": "Yes",
            },
            {
              "employee_id":  "0005",
      "employee_name":"Kishore",
      "department":"IT",
      "shift":"GEN",
      "cardnumber":"005",
      "staff_category":"Employee",
      "location": "",
      "imgurl": "https://cdn-icons-png.flaticon.com/512/3135/3135715.png",
      "active": "Yes",
              },
              {
                "employee_id":  "0006",
      "employee_name":"Kishore",
      "department":"IT",
      "shift":"GEN",
      "cardnumber":"006",
      "staff_category":"Employee",
      "location": "",
      "imgurl": "https://cdn-icons-png.flaticon.com/512/3135/3135715.png",
      "active": "Yes",
                },
                {
                  "employee_id":  "0007",
      "employee_name":"Kishore",
      "department":"IT",
      "shift":"GEN",
      "cardnumber":"007",
      "staff_category":"Employee",
      "location": "",
      "imgurl": "https://cdn-icons-png.flaticon.com/512/3135/3135715.png",
      "active": "Yes",
                },
                {
                  "employee_id":  "0008",
      "employee_name":"Madhu",
      "department":"IT",
      "shift":"GEN",
      "cardnumber":"008",
      "staff_category":"Employee",
      "location": "",
      "imgurl": "https://cdn-icons-png.flaticon.com/512/3135/3135715.png",
      "active": "Yes",
                }

]

const isAddNewReaderDrawerVisible = ref(false)

// ?? watching current page
watchEffect(() => {
  if (currentPage.value > totalPage.value)
    currentPage.value = totalPage.value
})

// ?? Computing pagination data
const paginationData = computed(() => {
  const firstIndex = employee.value.length ? (currentPage.value - 1) * rowPerPage.value + 1 : 0
  const lastIndex = employee.value.length + (currentPage.value - 1) * rowPerPage.value
  
  return `Showing ${ firstIndex } to ${ lastIndex } of ${ totalUsers.value } entries`
})

const addNewUser = userData => {
  userListStore.addUser(userData)

  // refetch User
  fetchUsers()
}

// ?? List
const userListMeta = [
  {
    icon: 'tabler-user',
    color: 'primary',
    title: 'Session',
    stats: '21,459',
    percentage: +29,
    subtitle: 'Total Users',
  },
  {
    icon: 'tabler-user-plus',
    color: 'error',
    title: 'Paid Users',
    stats: '4,567',
    percentage: +18,
    subtitle: 'Last week analytics',
  },
  {
    icon: 'tabler-user-check',
    color: 'success',
    title: 'Active Users',
    stats: '19,860',
    percentage: -14,
    subtitle: 'Last week analytics',
  },
  {
    icon: 'tabler-user-exclamation',
    color: 'warning',
    title: 'Pending Users',
    stats: '237',
    percentage: +42,
    subtitle: 'Last week analytics',
  },
]
</script>

<template>
  <section>
    <VRow>
      <!-- <VCol
        v-for="meta in userListMeta"
        :key="meta.title"
        cols="12"
        sm="6"
        lg="3"
      >
        <VCard>
          <VCardText class="d-flex justify-space-between">
            <div>
              <span>{{ meta.title }}</span>
              <div class="d-flex align-center gap-2 my-1">
                <h6 class="text-h6">
                  {{ meta.stats }}
                </h6>
                <span :class="meta.percentage > 0 ? 'text-success' : 'text-error'">({{ meta.percentage }}%)</span>
              </div>
              <span>{{ meta.subtitle }}</span>
            </div>

            <VAvatar
              rounded
              variant="tonal"
              :color="meta.color"
              :icon="meta.icon"
            />
          </VCardText>
        </VCard>
      </VCol> -->

      <VCol cols="12">
      <VCard >
        <!-- <VCard title="Search Filter"> -->
          <!-- ?? Filters -->
          <!-- <VCardText>
            <VRow>
               ?? Select Role 
              <VCol
                cols="12"
                sm="4"
              >
                <VSelect
                  v-model="selectedRole"
                  label="Select Role"
                  :items="roles"
                  clearable
                  clear-icon="tabler-x"
                />
              </VCol>
              ?? Select Plan 
              <VCol
                cols="12"
                sm="4"
              >
                <VSelect
                  v-model="selectedPlan"
                  label="Select Plan"
                  :items="plans"
                  clearable
                  clear-icon="tabler-x"
                />
              </VCol>
               ?? Select Status 
              <VCol
                cols="12"
                sm="4"
              >
                <VSelect
                  v-model="selectedStatus"
                  label="Select Status"
                  :items="status"
                  clearable
                  clear-icon="tabler-x"
                />
              </VCol>
            </VRow>
          </VCardText> -->

          <VDivider />

          <VCardText class="d-flex flex-wrap py-4 gap-4">
            <div
              class="me-3"
              style="width: 80px;"
            >
              <VSelect
                v-model="rowPerPage"
                density="compact"
                variant="outlined"
                :items="[10, 20, 30, 50]"
              />
            </div>

            <div
              class=""
              style="margin-left: 181px; margin-left: 72px;font-size: 24px;"
            >
              <h3 style="color: #2f2774;">RFID for Rolling Stocks Reader</h3>
            </div>


            <VSpacer />

            <div class="app-user-search-filter d-flex align-center flex-wrap gap-4">
              <!-- ?? Search  -->
              <div style="width: 10rem;">
                <VTextField
                  v-model="searchQuery"
                  placeholder="Search"
                  density="compact"
                />
              </div>

              <!-- ?? Export button -->
              <!-- <VBtn
                variant="tonal"
                color="secondary"
                prepend-icon="tabler-screen-share"
              >
                Export
              </VBtn> -->

              <!-- ?? Add user button -->
              <VBtn
                prepend-icon="tabler-plus"
                @click="isAddNewReaderDrawerVisible = true"
              >
                Add Reader
              </VBtn>
            </div>
          </VCardText>

          <VDivider />

          <VTable class="text-no-wrap">
            <!-- ?? table head -->
            <thead>
              <tr>
                <th scope="col">
                 HOST NAME
                </th>
                <th scope="col">
               PORT
                </th>
                <th scope="col">
               LOCATION
                </th>
                <th scope="col">
               PHASE ANGLE
                </th>
                <th scope="col">
               
               FREQUENCY
                </th>
                <th scope="col">
                
               LAST SEEN
                </th>
                <th scope="col">
                ANTENNA
                </th>
                
                <th scope="col">
                  ACTIONS
                </th>
              </tr>
            </thead>
            <!-- ?? table body -->
            <tbody>
              <tr
                v-for="user in employee"
                :key="user.id"
                style="height: 3.75rem;"
              >
                <!-- ?? User -->
                <td>
            <RouterLink :to="{ name: '', params: { id: user.employee_id } }">
              #{{ user.employee_id }}
            </RouterLink>
          </td>

                <!-- ?? Role -->
                <td>
                 <div class="d-flex align-center">
                    <VAvatar
                      variant="tonal"
                      style="color: #009a3e;"
                      class="me-3"
                      size="38"
                    >
                      <VImg
                        v-if="user.imgurl"
                        :src="user.imgurl"
                      />
                      <span v-else>{{ avatarText(user.imgurl) }}</span>
                    </VAvatar>

                    <div class="d-flex flex-column">
                      <h6 class="text-base">
                        <RouterLink
                          :to="{ name: '', params: { id: user.employee_id } }"
                          class="font-weight-medium user-list-name"
                        >
                          {{ user.employee_name }}
                        </RouterLink>
                      </h6>
                    
                    </div>
                  </div>
              </td>

                <!-- ?? Plan -->
                <td>
                  <span class="text-capitalize text-base font-weight-semibold">{{ user.department }}</span>
                </td>

                <!-- ?? Billing -->
                <td>
                  <span class="text-base">{{ user.shift }}</span>
                </td>

                <!-- ?? Status -->
                <td>
                  <!-- <VChip
                    label
                    :color="resolveUserStatusVariant(user.status)"
                    size="small"
                    class="text-capitalize"
                  >
                    {{ user.status }}
                  </VChip> -->
                  {{ user.cardnumber }}
                </td>
                <td>
                  <span class="text-base">{{ user.staff_category }}</span>
                </td>
              
                <!-- <td>
                  <span class="text-base">{{ user.active }}</span>
                </td> -->

                <!-- ?? Actions -->

                <td
                  class="text-center"
                  style="width: 5rem;"
                >
                  <VBtn
                    icon
                    size="x-small"
                    color="default"
                    variant="text"
                  >
                    <VIcon
                      size="22"
                      icon="tabler-dots-vertical"
                    />

                    <VMenu activator="parent">
                      <VList>
                        <!-- <VListItem
                          title="View"
                          :to="{ name: 'apps-user-view-id', params: { id: user.id } }"
                        /> -->
                        <VListItem
                          title="View"
                          href="javascript:void(0)"
                        />
                      </VList>
                    </VMenu>
                  </VBtn>
                </td>
                <td
                  class="text-center"
                  style="width: 5rem;"
                >
                  <VBtn
                    icon
                    size="x-small"
                    color="default"
                    variant="text"
                  >
                    <VIcon
                      size="22"
                      icon="tabler-edit"
                    />
                  </VBtn>

                  <VBtn
                    icon
                    size="x-small"
                    color="default"
                    variant="text"
                  >
                    <VIcon
                      size="22"
                      icon="tabler-trash"
                    />
                  </VBtn>

                  <!-- <VBtn
                    icon
                    size="x-small"
                    color="default"
                    variant="text"
                  >
                    <VIcon
                      size="22"
                      icon="tabler-dots-vertical"
                    />

                    <VMenu activator="parent">
                      <VList>
                        <VListItem
                          title="View"
                          :to="{ name: 'apps-user-view-id', params: { id: user.id } }"
                        />
                        <VListItem
                          title="Suspend"
                          href="javascript:void(0)"
                        />
                      </VList>
                    </VMenu>
                  </VBtn> -->
                </td>
              </tr>
            </tbody>

            <!-- ?? table footer  -->
            <tfoot v-show="!employee.length">
              <tr>
                <td
                  colspan="7"
                  class="text-center"
                >
                  No data available
                </td>
              </tr>
            </tfoot>
          </VTable>

          <VDivider />

          <VCardText class="d-flex align-center flex-wrap justify-space-between gap-4 py-3 px-5">
            <span class="text-sm text-disabled">
              {{ paginationData }}
            </span>

            <VPagination
              v-model="currentPage"
              size="small"
              :total-visible="5"
              :length="totalPage"
            />
          </VCardText>
        </VCard>
      </VCol>
    </VRow>

    <!-- ?? Add New User -->
    <AddNewReaderDrawer
      v-model:isDrawerOpen="isAddNewReaderDrawerVisible"
      @user-data="addNewReader"
    />
  </section>
</template>

<style lang="scss">
.app-user-search-filter {
  inline-size: 31.6rem;
}

.text-capitalize {
  text-transform: capitalize;
}

.user-list-name:not(:hover) {
  color: rgba(var(--v-theme-on-background), var(--v-high-emphasis-opacity));
}
</style>
